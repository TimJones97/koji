{"version":3,"sources":["webpack:///./src/pages/listen/{StrapiHdPodcasts.slug}.js","webpack:///./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js"],"names":["ListenArticle","props","state","article","data","strapiHdPodcasts","metaTitle","guest","metaDescription","description","recentEpisodes","currentURL","renderRecentEpisodes","bind","episode_data","this","allStrapiHdPodcasts","edges","sortedEpisodes","concat","sort","a","b","node","episode","map","single_episode","index","title","thumbnail","img","formats","medium","url","date","release_date","duration","slug","size","key","pageURL","window","location","href","setState","componentDidMount","render","className","format","target","rel","youtube_link","src","captivate_link","width","height","frameBorder","transcript","notes","alt","slice","to","aria-label","Component","_assertThisInitialized","self","ReferenceError"],"mappings":"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","file":"component---src-pages-listen-strapi-hd-podcasts-slug-js-51944fc9590f6b68fbf3.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { graphql, Link } from 'gatsby';\r\nimport Moment from \"react-moment\";\r\n\r\nimport SEO from '../../components/seo';\r\nimport Layout from '../../components/layout';\r\nimport Episode from '../../components/episode';\r\n\r\nexport const queryPodcast = graphql`\r\n  query StrapiHdPodcasts($slug: String!) {\r\n    strapiHdPodcasts(slug: { eq: $slug }) {\r\n      captivate_link\r\n      description\r\n      duration\r\n      episode\r\n      guest\r\n      img {\r\n        formats {\r\n          medium {\r\n            url\r\n          }\r\n        }\r\n      }\r\n      meeting_notes {\r\n        description\r\n        note\r\n        notes\r\n        title\r\n      }\r\n      slug\r\n      transcript\r\n      youtube_link\r\n    }\r\n    allStrapiHdPodcasts {\r\n      edges {\r\n        node {\r\n          captivate_link\r\n          description\r\n          episode\r\n          duration\r\n          guest\r\n          img {\r\n            formats {\r\n              medium {\r\n                url\r\n              }\r\n            }\r\n          }\r\n          recorded_on(formatString: \"\")\r\n          slug\r\n          release_date(formatString: \"\")\r\n          youtube_link\r\n          transcript\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\nclass ListenArticle extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      article: this.props.data.strapiHdPodcasts,\r\n      metaTitle: this.props.data.strapiHdPodcasts.guest,\r\n      metaDescription: this.props.data.strapiHdPodcasts.description,\r\n      recentEpisodes: [],\r\n      currentURL: ''\r\n    };\r\n    this.renderRecentEpisodes = this.renderRecentEpisodes.bind(this);\r\n  }\r\n\r\n  renderRecentEpisodes(){\r\n    const episode_data = this.props.data.allStrapiHdPodcasts.edges,\r\n          sortedEpisodes = [].concat(episode_data)\r\n          .sort((a, b) => a.node.episode > b.node.episode ? -1 : 1)\r\n          .map((single_episode, index) => {\r\n            const episode = single_episode.node.episode,\r\n                  title = single_episode.node.guest,\r\n                  thumbnail = single_episode.node.img.formats.medium.url,\r\n                  date = single_episode.node.release_date,\r\n                  description = single_episode.node.description,\r\n                  duration = single_episode.node.duration,\r\n                  slug = single_episode.node.slug;\r\n            return (\r\n              <Episode \r\n                size='small' \r\n                episode={episode}\r\n                title={title}\r\n                thumbnail={thumbnail}\r\n                date={date}\r\n                description={description}\r\n                duration={duration}\r\n                slug={slug}\r\n                key={index}\r\n              />\r\n            ) \r\n          });\r\n    const pageURL = window.location.href;\r\n    this.setState({recentEpisodes: sortedEpisodes});\r\n    this.setState({currentURL: pageURL});\r\n  }\r\n  componentDidMount() {\r\n    this.renderRecentEpisodes();\r\n  }\r\n  render() {\r\n    return (\r\n      <>\r\n        <Layout>\r\n          <SEO title={this.state.metaTitle} description={this.state.metaDescription}/>\r\n          <section className=\"normal-section article listen-article light-nav brown-nav\">\r\n            <div className=\"container\">\r\n              <div>\r\n                <div className=\"left-contain\">\r\n                  <hr className=\"desktop\"/>\r\n                  <header>\r\n                    <span className=\"number\">Episode #{this.state.article.episode}</span>\r\n                    <h1 className=\"title\">\r\n                      {this.state.article.guest}\r\n                    </h1>\r\n                    <div className=\"flexbox\">\r\n                      <div className=\"info\">\r\n                        <p className=\"date\">\r\n                          <Moment format=\"Do MMMM, YYYY\">{this.state.article.date}</Moment>\r\n                        </p>\r\n                        <span>&nbsp;|&nbsp;</span>\r\n                        <p className=\"time\">{this.state.article.duration} minutes</p>\r\n                      </div>\r\n                      <div className=\"share-links\">\r\n                        <p><b>Share</b></p>\r\n                        {/*<a href={\"https://angel.co/alpha/webext/new?url=\" + this.state.currentURL} target=\"_blank\">AngelList</a>*/}\r\n                        <a href={\"https://www.linkedin.com/shareArticle?mini=true&url=\" + this.state.currentURL} target=\"_blank\" rel=\"noreferrer\">LinkedIn</a>\r\n                        <a href={\"https://t.me/share/url?url=\" + this.state.currentURL} target=\"_blank\" rel=\"noreferrer\">Telegram</a>\r\n                        <a href={\"https://twitter.com/intent/tweet?url=\" + this.state.currentURL} target=\"_blank\" rel=\"noreferrer\">Twitter</a>\r\n                        <a href={this.state.article.youtube_link} target=\"_blank\" rel=\"noreferrer\">Youtube</a>\r\n                      </div>\r\n                    </div>\r\n                  </header>\r\n                  <div className=\"episode-play\">\r\n                    <iframe src={this.state.article.captivate_link} title=\"Captivate Player\" width=\"100%\" height=\"170px\" frameBorder=\"0\"/>\r\n                  </div>\r\n                  <div className=\"text-contain\">\r\n                    <h2 className=\"tagline\">{this.state.article.description}</h2>\r\n                    <p>\r\n                      {this.state.article.transcript}\r\n                    </p>\r\n                    {this.state.article.notes && \r\n                      <p>\r\n                        {this.state.article.notes}\r\n                      </p>\r\n                    }\r\n                    \r\n                  </div>\r\n                  {(this.state.article.youtube_link != null) &&\r\n                    <div className=\"article-video\">\r\n                      <iframe src={this.state.article.youtube_link} title=\"YouTube Video\" width=\"100%\" height=\"620px\" frameBorder=\"0\"/>\r\n                    </div>\r\n                  }\r\n                </div>\r\n                <div className=\"right-contain\">\r\n                  <picture className=\"article-img\">\r\n                    <img alt=\"article-thumbnail\" src={this.state.article.img.formats.medium.url}/>\r\n                  </picture>\r\n                  <div className=\"episode-play mobile\">\r\n                    <iframe src={this.state.article.captivate_link} title=\"Captivate Player\" width=\"100%\" height=\"175px\" frameBorder=\"0\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"recent-episodes\">\r\n                <span className=\"subheading\">RECENT EPISODES</span>\r\n                {/*Get the most recent 2 episodes*/}\r\n                {this.state.recentEpisodes.slice(0, 2).map((episode, index) => {\r\n                  return episode\r\n                })}\r\n                <Link className=\"link-white\" to=\"/listen\">View all Episodes<button aria-label=\"View all episodes\" className=\"circle-btn sml\"/></Link>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </Layout>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListenArticle;","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}"],"sourceRoot":""}